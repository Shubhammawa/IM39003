/* Shubham Mawa 16IM10033 */
/* Class work: Diet-Optimization */
proc optmodel;

set food={"Bread","Milk","Cheese","Potato","Fish","Yogurt"};
set nutrients={"Protein","Fat","Carbohydrates","Calories"};

number cost{food}=[2 3.5 8 1.5 11 1];

number diet{nutrients,food}=[4 8 7 1.3 8 9.2
1 5 9 .1 7 1
15 11.7 .4 22.6 0 17
90 120 106 97 130 180];

number a{nutrients} = [10 8 10 300];
var x{food} >=0;
min total_cost = sum{i in food}cost[i]*x[i];
con calories: sum{j in food}x[j]*diet["Calories",j] >= a["Calories"];
con protein: sum{j in food}x[j]*diet["Protein",j] <= a["Protein"];
con carbs: sum{j in food}x[j]*diet["Carbohydrates",j] >= a["Carbohydrates"];
con fat: sum{j in food}x[j]*diet["Fat",j] >= a["Fat"];

con fish: x["Fish"] >= 0.5;
con milk: x["Milk"] <= 1;

solve;
print x;

/* Crate optimiation problem */
proc optmodel;

set types={'A','B','C','D','E'};
set segment={'Front','Middle','Back'};

number weight{types} = [500 1500 2100 600 400];
number volume{types} = [25 15 13 20 16];
number value{types} = [50000 60000 90000 40000 30000];

number wt_capacity{segment} = [8000 20000 6000];
number vol_capacity{segment} = [200 500 300];
number ub{types} = [12 8 22 15 11];

var x{segment,types} integer >=0;

max total_value = sum{i in segment, j in types}x[i,j]*value[j];

con ct1: sum{i in types}x['Middle',i]*weight[i] >= sum{i in types}x['Front',i]*weight[i] + sum{i in types}x['Back',i]*weight[i];
con ct2: sum{i in types}x['Middle',i]*weight[i] <= 2*(sum{i in types}x['Front',i]*weight[i] + sum{i in types}x['Back',i]*weight[i]);

con ct3: sum{i in types}x['Front',i]*volume[i] <= vol_capacity['Front'];
con ct4: sum{i in types}x['Middle',i]*volume[i] <= vol_capacity['Middle'];
con ct5: sum{i in types}x['Back',i]*volume[i] <= vol_capacity['Back'];

con ct6: sum{i in types}x['Front',i]*weight[i] <= wt_capacity['Front'];
con ct7: sum{i in types}x['Middle',i]*weight[i] <= wt_capacity['Middle'];
con ct8: sum{i in types}x['Back',i]*weight[i] <= wt_capacity['Back'];

con ct9: sum{i in segment}x[i,'A'] <= ub['A'];
con ct10: sum{i in segment}x[i,'B'] <= ub['B'];
con ct11: sum{i in segment}x[i,'C'] <= ub['C'];
con ct12: sum{i in segment}x[i,'D'] <= ub['D'];
con ct13: sum{i in segment}x[i,'E'] <= ub['E'];

solve with milp;
print x;
quit;